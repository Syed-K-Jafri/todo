{"version":3,"sources":["NavBar/NavBar.js","store/types.js","store/todoaction.js","Todos/Todo.js","Contact/Contact.js","App.js","reportWebVitals.js","store/todoreducer.js","index.js"],"names":["withRouter","history","routeChange","e","route","preventDefault","push","Navbar","bg","variant","Brand","href","Nav","className","Link","onClick","ADD_TASK","COMPLETE_TASK","DELETE_TASK","EDIT_TASK","SET_TODOLIST_FILTER","addTodo","title","type","completeTodo","id","deleteTodo","editTodo","setTodoListFilter","filter","todolistFilters","SHOW_ALL","SHOW_COMPLETED","SHOW_ACTIVE","getTodoList","todos","t","completed","Error","Todo","props","createOrEditTodo","a","state","edit","trim","length","setState","invalid","handleEdit","elem","handleComplete","handleDelete","Row","Col","md","span","offset","Card","Body","Form","onSubmit","Group","controlId","Control","name","required","placeholder","value","this","onChange","target","onFocus","Button","data","map","Fragment","border","xs","defaultChecked","Text","Footer","style","float","textAlign","texAlign","Header","selectedFilter","React","Component","connect","actions","Contact","handleTextChange","handleSubmit","firstName","lastName","email","comments","Label","as","rows","App","exact","path","to","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","getId","reduce","maxId","todo","Math","max","reducer","action","x","combineReducers","todoReducer","store","window","devToolsExtension","createStore","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.44655a3d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst NavBar = ({ history }) => {\r\n\r\n    const routeChange = (e, route) => {\r\n        e.preventDefault();\r\n        history.push(route);    \r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"success\" variant=\"dark\">\r\n            <Navbar.Brand href=\"/todo\">Syed-K-Jafri</Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"/todo\" onClick={(e) => routeChange(e, '/todo')}>ToDo</Nav.Link>\r\n                <Nav.Link href=\"/contact\" onClick={(e) => routeChange(e, '/contact')}>Contact</Nav.Link>\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default withRouter(NavBar);","export const ADD_TASK = 'ADD_TASK';\r\nexport const COMPLETE_TASK = 'COMPLETE_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const SHOW_ALL = 'SHOW_ALL';\r\nexport const SHOW_ACTIVE = 'SHOW_ACTIVE';\r\nexport const SHOW_COMPLETED = 'SHOW_COMPLETED';\r\nexport const SET_TODOLIST_FILTER = 'SET_TODOLIST_FILTER';","import { ADD_TASK, DELETE_TASK, COMPLETE_TASK, EDIT_TASK, SHOW_ACTIVE, SHOW_ALL, SHOW_COMPLETED, SET_TODOLIST_FILTER } from './types';\r\n\r\nexport const addTodo = title => {\r\n    return {\r\n        type: ADD_TASK,\r\n        title: title,\r\n    }\r\n};\r\n\r\nexport const completeTodo = (id) => {\r\n    return {\r\n        type: COMPLETE_TASK,\r\n        id: id\r\n    }\r\n}\r\n\r\nexport const deleteTodo = (id) => {\r\n    return {\r\n        type: DELETE_TASK,\r\n        id: id\r\n    }\r\n}\r\n\r\nexport const editTodo = (id, title) => {\r\n    return {\r\n        type: EDIT_TASK,\r\n        title: title,\r\n        id: id\r\n    }\r\n}\r\n\r\nexport const setTodoListFilter = filter => ({\r\n    type: SET_TODOLIST_FILTER,\r\n    filter\r\n})\r\n\r\nexport const todolistFilters = {\r\n    SHOW_ALL: SHOW_ALL,\r\n    SHOW_COMPLETED: SHOW_COMPLETED,\r\n    SHOW_ACTIVE: SHOW_ACTIVE\r\n};\r\n\r\nexport const getTodoList = (todos, filter) => {\r\n    switch(filter) {\r\n        case todolistFilters.SHOW_ALL:\r\n            return todos;\r\n        case todolistFilters.SHOW_ACTIVE:\r\n            return todos.filter(t => !t.completed);\r\n        case todolistFilters.SHOW_COMPLETED:\r\n            return todos.filter(t => t.completed);\r\n        default: \r\n            throw new Error('unknown filter' + filter);            \r\n    }\r\n  }\r\n  ","import React from 'react';\r\nimport { Row, Col, Form, Button, Card } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../store/todoaction';\r\n\r\nclass Todo extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            invalid: false,\r\n            edit: null\r\n        }\r\n    }\r\n\r\n    createOrEditTodo = async (e) => {\r\n        e.preventDefault();   \r\n     \r\n        let { title, edit } = this.state;\r\n        if (!title && title.trim().length <= 0) {\r\n            this.setState({ invalid: true });\r\n            return;\r\n        }\r\n\r\n        if (edit) {\r\n            await this.props.editTodo(edit.id, title);\r\n        } else {\r\n            await this.props.addTodo(title);\r\n        }\r\n        \r\n        this.setState({ title: '', edit: null });\r\n\r\n    }\r\n  \r\n    handleEdit = (elem) => {\r\n        this.setState({ edit: elem, title: elem.title });\r\n    }\r\n    \r\n    handleComplete = (id) => {\r\n        this.props.completeTodo(id);\r\n    }\r\n    \r\n    handleDelete = (id) => {\r\n        this.props.deleteTodo(id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <Row className='custom-comp-pad'>\r\n                    <Col md={{ span: 8, offset: 2 }} >\r\n                        <Card className='shadow'>\r\n                            <Card.Body>\r\n                                <Form onSubmit={(e)=> this.createOrEditTodo(e)}>\r\n                                    <Form.Row>\r\n                                        <Col md={9}>\r\n                                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                                <Form.Control \r\n                                                    type=\"text\" \r\n                                                    name=\"title\"\r\n                                                    required\r\n                                                    placeholder=\"task...\" \r\n                                                    value={this.state.title}\r\n                                                    onChange={(e)=> this.setState({ title: e.target.value })}\r\n                                                    className={ this.state.invalid ? 'invalid' : '' }\r\n                                                    onFocus={()=> this.setState({ invalid: false })}\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Button \r\n                                                variant='outline-primary' \r\n                                                className='custom-width' \r\n                                                type=\"submit\" \r\n                                                onClick={(e) => this.createOrEditTodo(e) }>\r\n                                                    { this.state.edit ? 'SAVE' : 'ADD' }\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Form.Row>\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Row>\r\n                            <Col>\r\n                                <Card className=\"shadow\">\r\n                                    <Card.Body>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                {\r\n                                                    this.props.data.map(elem => (\r\n                                                        <React.Fragment key={elem.id}>\r\n                                                            <Card className=\"mt-2\" border={elem.completed ? 'success': 'primary'}>\r\n                                                                <Card.Body>\r\n                                                                    <Row>\r\n                                                                        <Col xs={1}>\r\n                                                                            <input type=\"checkbox\"\r\n                                                                                defaultChecked={elem.completed}\r\n                                                                                required={true}\r\n                                                                                onClick={() => this.handleComplete(elem.id)}\r\n                                                                            />\r\n                                                                        </Col>\r\n                                                                        <Col xs={11}>\r\n                                                                            <Card.Text>\r\n                                                                                {elem.title}  \r\n                                                                            </Card.Text>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </Card.Body>\r\n                                                                <Card.Footer style={{ float: 'right', textAlign: 'right' }}>\r\n                                                                    { elem.completed ? <Card.Text style={{ texAlign: 'left', float: 'left' }}>\r\n                                                                        Completed\r\n                                                                    </Card.Text>: null}\r\n                                                                    <Button variant=\"outline-primary m-1\" onClick={()=>this.handleEdit(elem)}>Edit</Button>\r\n                                                                    <Button variant=\"outline-primary m-1\" onClick={()=>this.handleDelete(elem.id)}>Delete</Button>\r\n                                                                </Card.Footer>\r\n                                                            </Card>\r\n                                                        </React.Fragment>\r\n                                                    ))\r\n                                                }\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                                <Card>\r\n                                    <Card.Header>\r\n                                        <h6>SHOW:</h6>\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <span className={ this.props.selectedFilter && this.props.selectedFilter == 'SHOW_ALL' ? `badge badge-secondary filter-btn filter-active` : 'badge badge-secondary filter-btn' } onClick={(e)=> this.props.setTodoListFilter('SHOW_ALL')}>ALL</span>\r\n                                        <span className={this.props.selectedFilter && this.props.selectedFilter == 'SHOW_ACTIVE' ? `badge badge-secondary filter-btn filter-active` : 'badge badge-secondary filter-btn'} onClick={(e)=> this.props.setTodoListFilter('SHOW_ACTIVE')}>ACTIVE</span>\r\n                                        <span className={this.props.selectedFilter && this.props.selectedFilter == 'SHOW_COMPLETED' ? `badge badge-secondary filter-btn filter-active` : 'badge badge-secondary filter-btn'} onClick={(e)=> this.props.setTodoListFilter('SHOW_COMPLETED')}>COMPLETED</span>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: actions.getTodoList(state.data.todos, state.data.filter),\r\n        selectedFilter: state.data.filter\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(Todo);","import React from 'react';\r\nimport { Row, Col, Form, Button, Card } from 'react-bootstrap';\r\n\r\nclass Contact extends React.Component {\r\n  \r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      comments: ''\r\n    }\r\n  }\r\n  \r\n  handleTextChange = (e) => {\r\n    this.setState({ [e.name]: e.value });\r\n  }\r\n  \r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ firstName: '', lastName: '', email: '', comments: '' });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Row className='custom-comp-pad'>\r\n          <Col md={{ span: 8, offset: 2 }}>\r\n            <Card className=\"shadow\">\r\n                <Card.Body>\r\n                    <Form onSubmit={(e) => this.handleSubmit()}>\r\n                        <Form.Row>\r\n                            <Col>\r\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>First Name</Form.Label>\r\n                                <Form.Control \r\n                                type=\"text\"\r\n                                name=\"firstName\"\r\n                                required \r\n                                placeholder=\"Enter First Name\"\r\n                                value={this.state.firstName}\r\n                                onChange={(e) => this.handleTextChange(e.target)}\r\n                                />\r\n                            </Form.Group>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Col>\r\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Last Name</Form.Label>\r\n                                <Form.Control \r\n                                type=\"text\"\r\n                                name=\"lastName\" \r\n                                required\r\n                                placeholder=\"Enter Last Name\"\r\n                                value={this.state.lastName}\r\n                                onChange={(e) => this.handleTextChange(e.target)}\r\n                                />\r\n                            </Form.Group>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Col>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control \r\n                                type=\"email\"\r\n                                name=\"email\" \r\n                                required\r\n                                placeholder=\"example@gmail.com\"\r\n                                value={this.state.email}\r\n                                onChange={(e) => this.handleTextChange(e.target)}\r\n                                />\r\n                            </Form.Group>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Col>\r\n                            <Form.Group>\r\n                                <Form.Label>Comments</Form.Label>\r\n                                <Form.Control \r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                required\r\n                                name=\"comments\" \r\n                                placeholder=\"Comments...\"\r\n                                value={this.state.comments}\r\n                                onChange={(e) => this.handleTextChange(e.target)}\r\n                                />\r\n                            </Form.Group>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Col>\r\n                                <Button \r\n                                    className=\"custom-width\" \r\n                                    variant=\"primary\" \r\n                                    type=\"submit\" \r\n                                    onClick={(e)=> this.handleSubmit(e)}\r\n                                >\r\n                                    Submit\r\n                                </Button>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Contact;","import NavBar from './NavBar/NavBar';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Todo from './Todos/Todo';\nimport Contact from './Contact/Contact';\n\nfunction App() {\n  return (\n    <>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/todo\" />\n        </Route>\n        <Route exact path={\"/todo\"} component={Todo} />\n        <Route exact path={\"/contact\"} component={Contact} />\n      </Switch>      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_TASK, COMPLETE_TASK, DELETE_TASK, EDIT_TASK, SET_TODOLIST_FILTER } from './types';\r\n\r\nconst initialState = { \r\n    todos : [],\r\n    filter: 'SHOW_ALL'\r\n};\r\n\r\nfunction getId(state) {\r\n    return state.todos.reduce((maxId, todo) => {\r\n        return Math.max(todo.id, maxId)\r\n    }, -1) + 1\r\n}\r\n\r\nlet reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TASK:\r\n            let todo = { title: action.title, completed: false, id: getId(state) };\r\n            return {...state, todos: [...state.todos, todo]};\r\n        case COMPLETE_TASK:\r\n            return {...state, todos: state.todos.map(x => { return x.id === action.id ? {...x, ['completed']: !x.completed}: x } )};\r\n        case DELETE_TASK:\r\n            return {...state, todos: state.todos.filter(x => { return x.id !== action.id }) }\r\n        case EDIT_TASK:\r\n            return {...state, todos: state.todos.map(x => { return x.id === action.id ? {...x, ['title']: action.title} : x})};\r\n        case SET_TODOLIST_FILTER:\r\n            return {...state, filter: action.filter };\r\n        default:\r\n           return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\nimport todoReducer from './store/todoreducer';\n\nconst reducer = combineReducers({\n  data: todoReducer,\n})\n\nconst store = (window.devToolsExtension ? window.devToolsExtension () (createStore) : createStore) (reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/todo\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}